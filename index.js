const { Telegraf, Markup } = require('telegraf')
const { message } = require('telegraf/filters')
const path = require('path')
const commands = require('./const')
require('dotenv').config()
const bot = new Telegraf(process.env.BOT_TOKEN)
// Object to store user states (current menu)
const userStates = {}
const MENU_STATES = {
  MAIN_MENU: 'main_menu',
  CONTACT_US: 'contact_us',
  SOCIAL: 'social',
  FLOOR: 'floor',
  LAMINATE: 'laminate',
  WOODFLOOR: 'wood_floor',
}
const mainMenuLayout = Markup.keyboard([
  ["–ü—ñ–¥–ª–æ–≥–∞", "üö™–î–≤–µ—Ä—ñ", "–°—Ç—ñ–Ω–∏"],
  ["–°–æ—Ü–º–µ—Ä–µ–∂—ñ", "‚òéÔ∏è –ó–≤–æ—Ä–æ—Ç–Ω—ñ–π –∑–≤'—è–∑–æ–∫"],
  ["–î—ñ–∑–Ω–∞—Ç–∏—Å—å –º–∞—î —á–∞—Ç-ID"],
]).resize()

const laminateLayout = Markup.keyboard([
  [
    Markup.button.callback("üìä –ü—Ä–∞–π—Å", "laminate_price_button"),
    Markup.button.callback("üìí –ö–∞—Ç–∞–ª–æ–≥", "laminate_catalog_button"),
  ],
  [
    Markup.button.callback("‚è™ –ù–∞–∑–∞–¥", "laminate_back_button"),
    Markup.button.callback("‚¨ÖÔ∏è –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", "main_menu_button"),
  ],
]).resize()

const woodfloorLayout = Markup.keyboard([
  [
    Markup.button.callback("üìä –ü—Ä–∞–π—Å", "woodfloor_price_button"),
    Markup.button.callback("üìí –ö–∞—Ç–∞–ª–æ–≥", "woodfloor_catalog_button"),
  ],
  [
    Markup.button.callback("‚è™ –ù–∞–∑–∞–¥", "woodfloor_back_button"),
    Markup.button.callback("‚¨ÖÔ∏è –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", "main_menu_button"),
  ],
]).resize()

const contactUsLayout = Markup.keyboard([
  ["‚òéÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç–∏", "üåê –°–∞–π—Ç", "‚ùì –ó–∞–ø–∏—Ç–∞—Ç–∏"],
  [Markup.button.callback("‚¨ÖÔ∏è –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", "main_menu_button")],
]).resize()

const socialLayout = Markup.keyboard([
  ["Facebook", "Instagram", "Youtube"],
  [Markup.button.callback("‚¨ÖÔ∏è –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", "main_menu_button"),],
]).resize()

const floorLayout = Markup.keyboard([
  ["–õ–∞–º—ñ–Ω–∞—Ç/–í—ñ–Ω—ñ–ª", "–î–µ—Ä–µ–≤'—è–Ω–∞ –ø—ñ–¥–ª–æ–≥–∞", "–õ—ñ–Ω–æ–ª–µ—É–º/–ö–æ–≤—Ä–æ–ª—ñ–Ω"],
  ["–ü–ª—ñ–Ω—Ç—É—Å/–ü–æ—Ä–æ–≥–∏", "–î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—ñ", "–¢–µ–ø–ª–∞ –ø—ñ–¥–ª–æ–≥–∞"],
  [Markup.button.callback("‚¨ÖÔ∏è –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", "main_menu_button"),],
]).resize()
// Middleware to log the chat ID
// bot.use((ctx, next) => {
//   // Access the chat ID using ctx.chat.id
//   const chatId = ctx.chat.id;
//   console.log('Chat ID:', chatId);

//   // Continue to the next middleware or handler
//   next();
// });

bot.start((ctx) => {
  const chatId = ctx.chat.id;
  // Store the current state as 'send_message'
  userStates[chatId] = MENU_STATES.MAIN_MENU
  // Send a message with the inline keyboard
  ctx.reply("–û–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é —ñ–∑ –∫–Ω–æ–ø–æ–∫ —Ä–æ–∑–º—ñ—â–µ–Ω–∏—Ö –Ω–∏–∂—á–µ", mainMenuLayout)
})
// Command handler for /help command
bot.help((ctx) => {
  const chatId = ctx.chat.id
  ctx.reply("This is a help message. You can customize it based on your needs.")
})

bot.hears("–î—ñ–∑–Ω–∞—Ç–∏—Å—å –º–∞—î —á–∞—Ç-ID", (ctx) => {
  // Access the chat ID using ctx.chat.id
  const chatId = ctx.chat.id
  // Send a message to the same chat
  ctx.reply(`–í–∞—à —á–∞—Ç ID: ${chatId}\n\n–í—ñ–Ω –º–æ–∂–µ –∑–Ω–∞–¥–æ–±–∏—Ç–∏—Å—è –¥–ª—è —Ç–æ—á–Ω–æ—ó —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó —á–∏ —Ä–æ–∑–±–ª–æ–∫—É–≤–∞–Ω–Ω—è –≤–∞—à–æ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º-–∞–∫–∫–∞—É–Ω—Ç—É –≤ –Ω–∞—à–æ–º—É –±–æ—Ç—ñ.\n–ü–æ–≤—ñ–¥–æ–º—Ç–µ –π–æ–≥–æ –Ω–∞—à–æ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É, –∞ –¥–∞–ª—ñ —Å–ø—Ä–∞–≤–∞ –∑–∞ –Ω–∞–º–∏ üòâ`)
})
/*
bot.hears("üìä –ü—Ä–∞–π—Å", async (ctx) => {
  const chatId = ctx.chat.id
  userStates[chatId] = MENU_STATES.LAMINATE
  const filePath = ["price/floor/doorin_laminate_13_11_23.pdf", "price/floor/doorin_floor_01_11.pdf"]
  const absolutePath = [path.resolve(__dirname, filePath[0]), path.resolve(__dirname, filePath[1])]
  // Send the file as a document
  try {
    await ctx.replyWithDocument({ source: absolutePath[0] })
    await ctx.replyWithDocument({ source: absolutePath[1] })
  } catch (error) {
    console.error("Error sending file:", error.description)
  }
})

bot.hears("üìí –ö–∞—Ç–∞–ª–æ–≥", async (ctx) => {
  const chatId = ctx.chat.id
  userStates[chatId] = MENU_STATES.LAMINATE
  const filePath = "catalog/–ö–∞—Ç–∞–ª–æ–≥_–ø—ñ–¥–ª–æ–≥–∞_—Å–∫–ª–∞–¥—Å—å–∫–∞_03_10_2022.pdf"
  const absolutePath = path.resolve(__dirname, filePath)
  // Send the file as a document
  try {
    await ctx.replyWithDocument({ source: absolutePath });
  } catch (error) {
    console.error("Error sending file:", error.description);
  }
})*/

bot.hears("–õ–∞–º—ñ–Ω–∞—Ç/–í—ñ–Ω—ñ–ª", (ctx) => {
  const chatId = ctx.chat.id
  userStates[chatId] = MENU_STATES.LAMINATE
  // Send a message with the inline keyboard
  ctx.reply("–û–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é —ñ–∑ –∫–Ω–æ–ø–æ–∫ —Ä–æ–∑–º—ñ—â–µ–Ω–∏—Ö –Ω–∏–∂—á–µ", laminateLayout)
})

bot.hears("–î–µ—Ä–µ–≤'—è–Ω–∞ –ø—ñ–¥–ª–æ–≥–∞", (ctx) => {
  const chatId = ctx.chat.id
  userStates[chatId] = MENU_STATES.WOODFLOOR
  // Send a message with the inline keyboard
  ctx.reply("–û–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é —ñ–∑ –∫–Ω–æ–ø–æ–∫ —Ä–æ–∑–º—ñ—â–µ–Ω–∏—Ö –Ω–∏–∂—á–µ", woodfloorLayout)
})

bot.hears("–ü—ñ–¥–ª–æ–≥–∞", (ctx) => {
  const chatId = ctx.chat.id
  userStates[chatId] = MENU_STATES.FLOOR
  // Send a message with the inline keyboard
  ctx.reply("–û–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é", floorLayout)
})

bot.hears("‚òéÔ∏è –ó–≤–æ—Ä–æ—Ç–Ω—ñ–π –∑–≤'—è–∑–æ–∫", (ctx) => {
  const chatId = ctx.chat.id
  userStates[chatId] = MENU_STATES.CONTACT_US
  // Send a message with the inline keyboard
  ctx.reply("–í–∏–±–µ—Ä—ñ—Ç—å –≤–∞—Ä—ñ–∞–Ω—Ç –∑–≤'—è–∑–∫—É –∑ –Ω–∞–º–∏:", contactUsLayout)
})

bot.hears("–°–æ—Ü–º–µ—Ä–µ–∂—ñ", (ctx) => {
  const chatId = ctx.chat.id
  userStates[chatId] = MENU_STATES.SOCIAL
  // Send a message with the inline keyboard
  ctx.reply("–î–æ–ª—É—á–∞–π—Ç–µ—Å—è –¥–æ –Ω–∞—Å –≤ —É–ª—é–±–ª–µ–Ω—ñ–π —Å–æ—Ü–º–µ—Ä–µ–∂—ñ", socialLayout)
})

bot.hears("üåê –°–∞–π—Ç", (ctx) => {
  const chatId = ctx.chat.id
  userStates[chatId] = MENU_STATES.CONTACT_US
  // Send a message with the inline keyboard
  ctx.reply("–ù–∞—à —Å–∞–π—Ç: www.doorin.store", contactUsLayout)
})

bot.hears("‚ùì –ó–∞–ø–∏—Ç–∞—Ç–∏", (ctx) => {
  const chatId = ctx.chat.id
  userStates[chatId] = MENU_STATES.CONTACT_US
  // Send a message with the inline keyboard
  ctx.reply(`–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –¥–ª—è –∑–≤'—è–∑–∫—É –∑ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º: @olegkostiuk`)
})
bot.hears("‚òéÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç–∏", (ctx) => {
  const chatId = ctx.chat.id
  userStates[chatId] = MENU_STATES.CONTACT_US
  // Send a message with the inline keyboard
  ctx.reply(`
  –ë—É–¥–µ–º–æ —Ä–∞–¥—ñ –í–∞—Å —á—É—Ç–∏!

  üïê–ü–Ω.-–ü—Ç.: 9:00-18:00
  –°–±.: 9:00-14:00
  
  üè†–º.–í—ñ–Ω–Ω–∏—Ü—è 
  –≤—É–ª.–ó–∞–º–æ—Å—Ç—è–Ω—Å—å–∫–∞ 25 –æ—Ñ—ñ—Å 24

  üì±+38(096)938-96-28 ‚Äì –û–ª–µ–≥
  üì±+38(063)313-49-82 ‚Äì –û–ª–µ–≥`, contactUsLayout)
})

bot.hears("Facebook", (ctx) => {
  const chatId = ctx.chat.id
  userStates[chatId] = MENU_STATES.SOCIAL
  // Send a message with the inline keyboard
  //ctx.replyWithHTML(`<a href='https://www.facebook.com/DoorInVinnitsa'>DOORIN Facebook Business Page</a>`, { disable_web_page_preview: true }, socialLayout)
  ctx.replyWithHTML(`https://www.facebook.com/DoorInVinnitsa`, { disable_web_page_preview: true }, socialLayout)
})

bot.hears("Instagram", (ctx) => {
  const chatId = ctx.chat.id
  userStates[chatId] = MENU_STATES.SOCIAL
  // Send a message with the inline keyboard
  ctx.replyWithHTML(`https://www.instagram.com/oleg_kostiuk/`, socialLayout)
})

bot.hears("Youtube", (ctx) => {
  const chatId = ctx.chat.id
  userStates[chatId] = MENU_STATES.SOCIAL
  // Send a message with the inline keyboard
  ctx.replyWithHTML(`https://www.youtube.com/@doorin_store`, socialLayout)
})

/*bot.hears("‚è™ –ù–∞–∑–∞–¥", (ctx) => {
  const chatId = ctx.chat.id
  // Retrieve the previous state (or default to 'main')
  const prevState = userStates[chatId] || MENU_STATES.MAIN_MENU
  switch (prevState) {
    case MENU_STATES.LAMINATE:
      ctx.reply("–û–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é —ñ–∑ –∫–Ω–æ–ø–æ–∫ —Ä–æ–∑–º—ñ—â–µ–Ω–∏—Ö –Ω–∏–∂—á–µ", floorLayout)
      break;
    // Add more cases as needed
    default:
      ctx.reply("–û–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é —ñ–∑ –∫–Ω–æ–ø–æ–∫ —Ä–æ–∑–º—ñ—â–µ–Ω–∏—Ö –Ω–∏–∂—á–µ", mainMenuLayout)
      break;
  }
  // Update the current state to the previous state
  userStates[chatId] = prevState;
})

bot.hears("‚¨ÖÔ∏è –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é", (ctx) => {
  const chatId = ctx.chat.id
  // Retrieve the previous state (or default to 'main')
  const prevState = userStates[chatId] || MENU_STATES.MAIN_MENU
  switch (prevState) {
    case MENU_STATES.MAIN_MENU:
    case MENU_STATES.CONTACT_US:
    case MENU_STATES.SOCIAL:
    case MENU_STATES.FLOOR:
      ctx.reply("–û–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é —ñ–∑ –∫–Ω–æ–ø–æ–∫ —Ä–æ–∑–º—ñ—â–µ–Ω–∏—Ö –Ω–∏–∂—á–µ", mainMenuLayout)
      break;
    // Add more cases as needed
    default:
      ctx.reply("–û–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é —ñ–∑ –∫–Ω–æ–ø–æ–∫ —Ä–æ–∑–º—ñ—â–µ–Ω–∏—Ö –Ω–∏–∂—á–µ", mainMenuLayout)
      break;
  }
  // Update the current state to the previous state
  userStates[chatId] = prevState;
})*/

const buttonActions = {
  'laminate_price_button': async (ctx) => {
    const chatId = ctx.chat.id
    userStates[chatId] = MENU_STATES.LAMINATE
    const filePath = ["price/floor/doorin_laminate_13_11_23.pdf", "price/floor/doorin_floor_01_11.pdf"]
    const absolutePath = [path.resolve(__dirname, filePath[0]), path.resolve(__dirname, filePath[1])]
    // Send the file as a document
    try {
      await ctx.replyWithDocument({ source: absolutePath[0] })
      await ctx.replyWithDocument({ source: absolutePath[1] })
    } catch (error) {
      console.error("Error sending file:", error.description)
    }
  },
  'laminate_catalog_button': async (ctx) => {
    const chatId = ctx.chat.id
    userStates[chatId] = MENU_STATES.LAMINATE
    const filePath = "catalog/–ö–∞—Ç–∞–ª–æ–≥_–ø—ñ–¥–ª–æ–≥–∞_—Å–∫–ª–∞–¥—Å—å–∫–∞_03_10_2022.pdf"
    const absolutePath = path.resolve(__dirname, filePath)
    // Send the file as a document
    try {
      await ctx.replyWithDocument({ source: absolutePath });
    } catch (error) {
      console.error("Error sending file:", error.description);
    }
  },
  'laminate_back_button': (ctx) => {
    const chatId = ctx.chat.id
    // Retrieve the previous state (or default to 'main')
    const prevState = userStates[chatId] || MENU_STATES.MAIN_MENU
    switch (prevState) {
      case MENU_STATES.LAMINATE:
        ctx.reply("–û–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é —ñ–∑ –∫–Ω–æ–ø–æ–∫ —Ä–æ–∑–º—ñ—â–µ–Ω–∏—Ö –Ω–∏–∂—á–µ", floorLayout);
        break;
      // Add more cases as needed
      default:
        ctx.reply("–û–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é —ñ–∑ –∫–Ω–æ–ø–æ–∫ —Ä–æ–∑–º—ñ—â–µ–Ω–∏—Ö –Ω–∏–∂—á–µ", mainMenuLayout);
        break;
    }
    // Update the current state to the previous state
    userStates[chatId] = prevState;
  },
  'main_menu_button': (ctx) => {
    const chatId = ctx.chat.id
    // Retrieve the previous state (or default to 'main')
    const prevState = userStates[chatId] || MENU_STATES.MAIN_MENU
    switch (prevState) {
      case MENU_STATES.MAIN_MENU:
      case MENU_STATES.CONTACT_US:
      case MENU_STATES.SOCIAL:
      case MENU_STATES.FLOOR:
        ctx.reply("–û–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é —ñ–∑ –∫–Ω–æ–ø–æ–∫ —Ä–æ–∑–º—ñ—â–µ–Ω–∏—Ö –Ω–∏–∂—á–µ", mainMenuLayout);
        break;
      // Add more cases as needed
      default:
        ctx.reply("–û–±–µ—Ä—ñ—Ç—å –ø—É–Ω–∫—Ç –º–µ–Ω—é —ñ–∑ –∫–Ω–æ–ø–æ–∫ —Ä–æ–∑–º—ñ—â–µ–Ω–∏—Ö –Ω–∏–∂—á–µ", mainMenuLayout);
        break;
    }
    // Update the current state to the previous state
    userStates[chatId] = prevState;
  },
}

// Handling button clicks
bot.on('callback_query', (ctx) => {
  const buttonId = ctx.callbackQuery.data;
  
  // Lookup and execute the corresponding action based on the buttonId
  const action = buttonActions[buttonId];
  if (action) {
    action(ctx);
  } else {
    // Handle unknown button clicks
  }
})

bot.launch()

// Enable graceful stop
process.once('SIGINT', () => bot.stop('SIGINT'))
process.once('SIGTERM', () => bot.stop('SIGTERM'))
